---
import Layout from '~/layouts/PageLayout.astro';
import HeroText from '~/components/widgets/HeroText.astro';
import ContactUs from '~/components/widgets/Contact.astro';
import Features2 from '~/components/widgets/Features2.astro';

const metadata = {
  title: 'Contact',
};
---

<Layout metadata={metadata}>
  <!-- HeroText Widget ******************* -->

  <HeroText tagline="Contact" title="Let's Connect!" />

  <ContactUs
    id="form"
    title="Drop us a message today!"
    subtitle="For quicker answers, explore our FAQs section. You may find the solution you're looking  for right there! If not, our support team is delighted to help you."
    inputs={[
      {
        type: 'text',
        name: 'name',
        label: 'Name',
      },
      {
        type: 'email',
        name: 'email',
        label: 'Email',
      },
    ]}
    textarea={{
      label: 'Message',
    }}
    disclaimer={{
      label:
        'By submitting this contact form, you acknowledge and agree to the collection of your personal information.',
    }}
    description="Our support team typically responds within 24 business hours."
  />

  <!-- Features2 Widget ************** -->

  <Features2
    title="We are here to help!"
    items={[
      {
        title: 'General support',
        description: `Chat with us for inquiries related to account management, website navigation, payment issues, accessing purchased templates or general questions about the website's functionality.`,
      },
      {
        title: 'Contact sales',
        description:
          'Chat with us for questions about purchases, customization options, licensing for commercial use, inquiries about specific template, etc.',
      },
      {
        title: 'Technical support',
        description:
          'Chat with us when facing issues like template installation, problems editing difficulties, compatibility issues with software or download errors, or other technical challenges related to using the templates.',
      },
      {
        title: 'Phone',
        description: '+1 (234) 567-890',
        icon: 'tabler:headset',
      },
      {
        title: 'Email',
        description: 'contact@support.com',
        icon: 'tabler:mail',
      },
      {
        title: 'Location',
        description: '1234 Lorem Ipsum St, 12345, Miami, EEUU',
        icon: 'tabler:map-pin',
      },
    ]}
  />
</Layout>


<script type="module">
  import { initializeApp } from "https://www.gstatic.com/firebasejs/9.6.1/firebase-app.js";
  import { getFirestore, collection, addDoc } from "https://www.gstatic.com/firebasejs/9.6.1/firebase-firestore.js";

  const firebaseConfig = {
  apiKey: 'AIzaSyBIEn3hMNm2GC24YYImkfA93flmPV1JfHo',
  authDomain: 'website-22d07.firebaseapp.com',
  projectId: 'website-22d07',
  storageBucket: 'website-22d07.appspot.com',
  messagingSenderId: '239309287004',
  appId: '1:239309287004:web:0299335495932bf1358099',
  measurementId: 'G-KLP94TXY10',
};

  // Initialize Firebase
  const app = initializeApp(firebaseConfig);
  const db = getFirestore(app);

  document.addEventListener('DOMContentLoaded', () => {
    console.log("DOM fully loaded and parsed");

    const form = document.querySelector('form');
    console.log("Form element:", form);

    form.addEventListener('submit', async (event) => {
      event.preventDefault(); // Prevent the default form submission
      console.log("Form submission prevented");

      const formData = new FormData(form);
      const data = Object.fromEntries(formData);
      console.log("Form data collected:", data);

      try {
        const collectionName = 'contacts';
        const docRef = await addDoc(collection(db, collectionName), data);
        console.log("Document written with ID: ", docRef.id);
        alert("Message sent successfully!");
      } catch (e) {
        console.error("Error adding document: ", e);
        alert("Error sending message. Please try again.");
      }
    });
  });
</script>